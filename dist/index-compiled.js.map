{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,QAAQ,QAAQ,WAAR,CAAZ;;AAEA,IAAI,QAAQ,wBAAwB,KAAxB,CAAZ;;AAEA,SAAS,uBAAT,CAAiC,GAAjC,EAAsC;AAAE,KAAI,OAAO,IAAI,UAAf,EAA2B;AAAE,SAAO,GAAP;AAAa,EAA1C,MAAgD;AAAE,MAAI,SAAS,EAAb,CAAiB,IAAI,OAAO,IAAX,EAAiB;AAAE,QAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AAAE,QAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAJ,EAAoD,OAAO,GAAP,IAAc,IAAI,GAAJ,CAAd;AAAyB;AAAE,GAAC,OAAO,OAAP,GAAiB,GAAjB,CAAsB,OAAO,MAAP;AAAgB;AAAE;;AAE7Q,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,OAAO,QAAQ,MAAR,EAAgB,IAA3B;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;;AAGA,IAAI,OAAO,QAAQ,GAAR,CAAY,IAAZ,IAAoB,IAA/B;AACA,IAAI,MAAM,SAAV;;AAEA,IAAI,GAAJ,CAAQ,QAAR;;AAEA,IAAI,GAAJ,CAAQ,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACjC,KAAI,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACA,KAAI,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACA,KAAI,MAAJ,CAAW,8BAAX,EAA2C,wBAA3C;AACA;AACA,CALD;;AAOA,IAAI,GAAJ,CAAQ,UAAR,EAAoB,QAAQ,MAAR,CAAe,KAAK,SAAL,EAAgB,mBAAhB,CAAf,CAApB;AACA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,QAAQ,MAAR,CAAe,KAAK,SAAL,EAAgB,gBAAhB,CAAf,CAAjB;AACA,IAAI,GAAJ,CAAQ,MAAR,EAAgB,QAAQ,MAAR,CAAe,KAAK,SAAL,EAAgB,eAAhB,CAAf,CAAhB;;AAEA,IAAI,GAAJ,CAAQ,GAAR,EAAa,UAAU,GAAV,EAAe,GAAf,EAAoB;AAChC,KAAI,QAAJ,CAAa,KAAK,SAAL,EAAgB,sBAAhB,CAAb;AACA,CAFD;;AAIA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACpC,KAAI,UAAU,MAAM,eAAN,EAAd;AACA,KAAI,QAAQ,MAAM,aAAN,CAAoB,EAApB,CAAZ;AACA,KAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACpB,WAAS,OADW,EACF,OAAO;AADL,EAArB;AAGA,CAND;;AAQA,IAAI,MAAJ,CAAW,IAAX,EAAiB,YAAY;AAC5B,SAAQ,GAAR,CAAY,+BAA+B,IAA/B,GAAsC,GAAlD;AACA,CAFD","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar _util = require('./util.js');\n\nvar utils = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar express = require('express');\nvar join = require('path').join;\nvar helmet = require('helmet');\n\n\nvar port = process.env.PORT || 3000;\nvar app = express();\n\napp.use(helmet());\n\napp.use(function (req, res, next) {\n\tres.header('Access-Control-Allow-Origin', '*');\n\tres.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n\tres.header('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE');\n\tnext();\n});\n\napp.use('/images/', express.static(join(__dirname, '../client/images/')));\napp.use('/css/', express.static(join(__dirname, '../client/css/')));\napp.use('/js/', express.static(join(__dirname, '../client/js/')));\n\napp.get('/', function (req, res) {\n\tres.sendFile(join(__dirname, '../client/index.html'));\n});\n\napp.get('/play', function (req, res) {\n\tvar numbers = utils.generateRandoms();\n\tvar bonus = utils.generateBonus(15);\n\tres.status(200).json({\n\t\tnumbers: numbers, bonus: bonus\n\t});\n});\n\napp.listen(port, function () {\n\tconsole.log('App is listening on Port: ' + port + '!');\n});"]}