{"version":3,"sources":["util.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,SAAS,QAAQ,MAAR,EAAgB,MAA7B;AACA,IAAI,SAAS,QAAQ,QAAR,CAAb;AACA,IAAI,OAAO,QAAQ,mBAAR,CAAX;;AAEA,SAAS,4BAAT,EAAuC,YAAY;AAClD,UAAS,mBAAT,EAA8B,YAAY;AACzC,KAAG,oBAAH,EAAyB,YAAY;AACpC,OAAI,SAAS,KAAK,eAAL,EAAb;AACA,UAAO,MAAP,EAAe,EAAf,CAAkB,EAAlB,CAAqB,CAArB,CAAuB,OAAvB;AACA,GAHD;;AAKA,KAAG,gCAAH,EAAqC,YAAY;AAChD,OAAI,SAAS,KAAK,eAAL,EAAb;AACA,UAAO,KAAP,CAAa,OAAO,MAApB,EAA4B,CAA5B;AACA,GAHD;;AAKA,KAAG,6BAAH,EAAkC,YAAY;AAC7C,OAAI,SAAS,KAAK,eAAL,EAAb;AACA,UAAO,KAAP,CAAa,OAAO,OAAP,CAAe,CAAf,CAAb,EAAgC,CAAC,CAAjC;AACA,GAHD;;AAKA,KAAG,4CAAH,EAAiD,YAAY;AAC5D,OAAI,SAAS,KAAK,eAAL,EAAb;AACA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,GAAnC,EAAwC;AACvC,WAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAP,EAA2B,EAA3B,CAA8B,OAA9B,CAAsC,OAAO,CAAP,CAAtC;AACA;AACD,GALD;AAOA,EAvBD;;AAyBA,UAAS,iBAAT,EAA4B,YAAY;AACvC,KAAG,2BAAH,EAAgC,YAAY;AAC3C,OAAI,SAAS,KAAK,aAAL,CAAmB,EAAnB,CAAb;AACA,UAAO,MAAP,EAAe,EAAf,CAAkB,EAAlB,CAAqB,CAArB,CAAuB,SAAvB;AACA,GAHD;;AAKA,KAAG,iDAAH,EAAsD,YAAY;AACjE,OAAI,SAAS,EAAb;AACA,QAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,GAApB,EAAyB,GAAzB,EAA8B;AAC7B,WAAO,IAAP,CAAY,KAAK,aAAL,CAAmB,EAAnB,CAAZ;AACA;AACD,UAAO,OAAO,MAAP,CAAc,UAAC,GAAD;AAAA,WAAS,GAAT;AAAA,IAAd,EAA4B,MAAnC,EAA2C,EAA3C,CAA8C,EAA9C,CAAiD,EAAjD,CAAoD,KAApD,CAA0D,EAA1D;AACA,GAND;AAOA,EAbD;AAcA,CAxCD","file":"util.spec-compiled.js","sourcesContent":["'use strict';\n\nvar expect = require('chai').expect;\nvar assert = require('assert');\nvar util = require('../server/util.js');\n\ndescribe('Utility Functions: util.js', function () {\n\tdescribe('generateRandoms()', function () {\n\t\tit('should be an array', function () {\n\t\t\tvar result = util.generateRandoms();\n\t\t\texpect(result).to.be.a('array');\n\t\t});\n\n\t\tit('should be an array of length 3', function () {\n\t\t\tvar result = util.generateRandoms();\n\t\t\tassert.equal(result.length, 3);\n\t\t});\n\n\t\tit('should not contain number 7', function () {\n\t\t\tvar result = util.generateRandoms();\n\t\t\tassert.equal(result.indexOf(7), -1);\n\t\t});\n\n\t\tit('should be an array of elements from 0 to 5', function () {\n\t\t\tvar result = util.generateRandoms();\n\t\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\t\texpect([0, 1, 2, 3, 4, 5]).to.include(result[i]);\n\t\t\t}\n\t\t});\n\n\t});\n\n\tdescribe('generateBonus()', function () {\n\t\tit('should be a boolean value', function () {\n\t\t\tvar result = util.generateBonus(25);\n\t\t\texpect(result).to.be.a('boolean');\n\t\t});\n\n\t\tit('should have around 25 percentage of true values', function () {\n\t\t\tlet result = [];\n\t\t\tfor (let i = 0; i < 200; i++) {\n\t\t\t\tresult.push(util.generateBonus(25));\n\t\t\t}\n\t\t\texpect(result.filter((val) => val).length).to.be.at.least(40);\n\t\t});\n\t});\n});"]}